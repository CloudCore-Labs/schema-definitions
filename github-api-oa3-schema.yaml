openapi: 3.0.0
info:
  title: GitHub API
  description: Common GitHub operations focusing on repository management
  version: 1.0.0
  contact:
    name: GitHub API Support
    url: https://docs.github.com/rest
servers:
  - url: https://api.github.com
    description: GitHub API v3

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    
  schemas:
    Repository:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        full_name:
          type: string
        private:
          type: boolean
        description:
          type: string
        default_branch:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        clone_url:
          type: string
          format: uri
    
    Content:
      type: object
      properties:
        type:
          type: string
          enum: [file, dir]
        size:
          type: integer
        name:
          type: string
        path:
          type: string
        content:
          type: string
        sha:
          type: string
        url:
          type: string
          format: uri
    
    Branch:
      type: object
      properties:
        name:
          type: string
        commit:
          type: object
          properties:
            sha:
              type: string
            url:
              type: string
              format: uri
    
    Issue:
      type: object
      properties:
        id:
          type: integer
          format: int64
        number:
          type: integer
        title:
          type: string
        body:
          type: string
        state:
          type: string
          enum: [open, closed]
        user:
          type: object
          properties:
            login:
              type: string
            id:
              type: integer
              format: int64
        labels:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              color:
                type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        closed_at:
          type: string
          format: date-time
          nullable: true
        assignees:
          type: array
          items:
            type: object
            properties:
              login:
                type: string
              id:
                type: integer
    
    IssueComment:
      type: object
      properties:
        id:
          type: integer
          format: int64
        body:
          type: string
        user:
          type: object
          properties:
            login:
              type: string
            id:
              type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Error:
      type: object
      properties:
        message:
          type: string
        documentation_url:
          type: string

paths:
  /user/repos:
    post:
      summary: Create a new repository
      operationId: createRepository
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  description: Repository name
                private:
                  type: boolean
                  default: false
                description:
                  type: string
                auto_init:
                  type: boolean
                  default: false
      responses:
        '201':
          description: Repository created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /repos/{owner}/{repo}:
    get:
      summary: Get repository information
      operationId: getRepository
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: repo
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Repository details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
        '404':
          description: Repository not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /repos/{owner}/{repo}/contents/{path}:
    get:
      summary: Get repository content
      operationId: getContent
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: repo
          in: path
          required: true
          schema:
            type: string
        - name: path
          in: path
          required: true
          schema:
            type: string
        - name: ref
          in: query
          required: false
          schema:
            type: string
            description: The name of the commit/branch/tag
      responses:
        '200':
          description: Content retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Content'
    
    put:
      summary: Create or update file contents
      operationId: createOrUpdateFile
      security:
        - bearerAuth: []
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: repo
          in: path
          required: true
          schema:
            type: string
        - name: path
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - message
                - content
              properties:
                message:
                  type: string
                  description: Commit message
                content:
                  type: string
                  description: Base64 encoded content
                branch:
                  type: string
                  description: Branch name
                sha:
                  type: string
                  description: SHA of the file being replaced
      responses:
        '200':
          description: File updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Content'
        '201':
          description: File created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Content'

  /repos/{owner}/{repo}/branches:
    get:
      summary: List branches
      operationId: listBranches
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: repo
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Branches retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Branch'

  /repos/{owner}/{repo}/issues:
    get:
      summary: List repository issues
      operationId: listRepositoryIssues
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: repo
          in: path
          required: true
          schema:
            type: string
        - name: state
          in: query
          schema:
            type: string
            enum: [open, closed, all]
            default: open
        - name: sort
          in: query
          schema:
            type: string
            enum: [created, updated, comments]
            default: created
        - name: direction
          in: query
          schema:
            type: string
            enum: [asc, desc]
            default: desc
        - name: per_page
          in: query
          schema:
            type: integer
            default: 30
        - name: page
          in: query
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: Issues retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Issue'
    
    post:
      summary: Create an issue
      operationId: createIssue
      security:
        - bearerAuth: []
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: repo
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
              properties:
                title:
                  type: string
                body:
                  type: string
                assignees:
                  type: array
                  items:
                    type: string
                labels:
                  type: array
                  items:
                    type: string
      responses:
        '201':
          description: Issue created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Issue'

  /repos/{owner}/{repo}/issues/{issue_number}:
    get:
      summary: Get a single issue
      operationId: getIssue
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: repo
          in: path
          required: true
          schema:
            type: string
        - name: issue_number
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Issue retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Issue'
    
    patch:
      summary: Update an issue
      operationId: updateIssue
      security:
        - bearerAuth: []
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: repo
          in: path
          required: true
          schema:
            type: string
        - name: issue_number
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                body:
                  type: string
                state:
                  type: string
                  enum: [open, closed]
                assignees:
                  type: array
                  items:
                    type: string
                labels:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Issue updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Issue'

  /repos/{owner}/{repo}/issues/{issue_number}/comments:
    get:
      summary: List issue comments
      operationId: listIssueComments
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: repo
          in: path
          required: true
          schema:
            type: string
        - name: issue_number
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Comments retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IssueComment'
    
    post:
      summary: Create an issue comment
      operationId: createIssueComment
      security:
        - bearerAuth: []
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: repo
          in: path
          required: true
          schema:
            type: string
        - name: issue_number
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - body
              properties:
                body:
                  type: string
      responses:
        '201':
          description: Comment created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueComment'

  /repos/{owner}/{repo}/git/refs:
    post:
      summary: Create a reference (branch or tag)
      operationId: createReference
      security:
        - bearerAuth: []
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: repo
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ref
                - sha
              properties:
                ref:
                  type: string
                  description: The name of the reference (e.g., refs/heads/branch-name)
                sha:
                  type: string
                  description: The SHA1 value to set the reference to
      responses:
        '201':
          description: Reference created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  ref:
                    type: string
                  object:
                    type: object
                    properties:
                      sha:
                        type: string
                      type:
                        type: string
                      url:
                        type: string
                        format: uri
