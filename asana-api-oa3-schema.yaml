openapi: 3.0.0
info:
  title: Asana Actions for Agentforce
  version: '1.0'
  description: Asana task operations for use in Apex/Flow actions for Agentforce

paths:
  /tasks:
    post:
      summary: Create a task
      operationId: createTask
      parameters:
        - name: opt_fields
          in: query
          description: |
            Defines which fields to return in the response. Multiple fields can be included as a comma-separated list.
            Common fields include: name, notes, due_on, completed, permalink_url, tags.name, custom_fields.name, custom_fields.display_value, created_at, completed_at
          required: false
          schema:
            type: array
            items:
              type: string
              enum: [
                "name",
                "notes", 
                "due_on",
                "completed",
                "permalink_url",
                "tags.name",
                "custom_fields.name",
                "custom_fields.display_value",
                "created_at",
                "completed_at"
              ]
              default: [
                "name",
                "notes", 
                "due_on",
                "completed",
                "permalink_url",
                "tags.name",
                "custom_fields.name",
                "custom_fields.display_value",
                "created_at",
                "completed_at"
              ]
          style: form
          explode: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'

  /tasks/{task_gid}:
    get:
      summary: Get a task
      operationId: getTask
      parameters:
        - name: task_gid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
                
    put:
      summary: Update a task
      operationId: updateTask
      parameters:
        - name: task_gid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'

    delete:
      summary: Delete a task
      operationId: deleteTask
      parameters:
        - name: task_gid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully deleted the task
          content:
            application/json:
              schema:
                type: object
                required: [data]
                properties:
                  data: 
                    type: object
  
  /sections/{section_gid}/tasks:
    get:
      summary: Get tasks in a section
      operationId: getTasksBySection
      parameters:
        - name: section_gid
          in: path
          schema:
            type: string
          default: "1208951390311552"
        - name: opt_fields
          in: query
          description: |
            Defines which fields to return in the response. Multiple fields can be included as a comma-separated list.
            Common fields include: name, notes, due_on, completed, permalink_url, tags.name, custom_fields.name, custom_fields.display_value, created_at, completed_at
          required: false
          schema:
            type: array
            items:
              type: string
              enum: [
                "name",
                "notes", 
                "due_on",
                "completed",
                "permalink_url",
                "tags.name",
                "custom_fields.name",
                "custom_fields.display_value",
                "created_at",
                "completed_at"
              ]
              default: [
                "name",
                "notes", 
                "due_on",
                "completed",
                "permalink_url",
                "tags.name",
                "custom_fields.name",
                "custom_fields.display_value",
                "created_at",
                "completed_at"
              ]
          style: form
          explode: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskListResponse'

  /projects/{project_gid}/sections:
    get:
      summary: Get all sections in a project
      operationId: getSectionsByProject
      parameters:
        - name: project_gid
          in: path
          required: true
          description: The project to get sections from
          schema:
            type: string
            default: "1208951390311549"
      responses:
        '200':
          description: Successfully retrieved the project sections
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SectionsListResponse'
        '400':
          description: Invalid request
        '404':
          description: Project not found
      
  
  /workspaces/{workspace_gid}/tags:
    get:
      summary: Get all tags in a workspace
      operationId: getTags
      parameters:
        - name: workspace_gid
          in: path
          required: true
          schema:
            type: string
            default: "1208951390306863"
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagListResponse'
                
  /workspaces/{workspace_gid}/tasks/search:
    get:
      summary: Get all tasks matching the search term in a workspace
      operationId: searchTasks
      parameters:
        - name: workspace_gid
          in: path
          required: true
          schema:
            type: string
            default: "1208951390306863"
        - name: text
          in: query
          required: true
          schema:
            type: string
        - name: opt_fields
          in: query
          description: |
            Defines which fields to return in the response. Multiple fields can be included as a comma-separated list.
            Common fields include: name, notes, due_on, completed, permalink_url, tags.name, custom_fields.name, custom_fields.display_value, created_at, completed_at
          required: false
          schema:
            type: array
            items:
              type: string
              enum: [
                "name",
                "notes", 
                "due_on",
                "completed",
                "permalink_url",
                "tags.name",
                "custom_fields.name",
                "custom_fields.display_value",
                "created_at",
                "completed_at"
              ]
              default: [
                "name",
                "notes", 
                "due_on",
                "completed",
                "permalink_url",
                "tags.name",
                "custom_fields.name",
                "custom_fields.display_value",
                "created_at",
                "completed_at"
              ]
          style: form
          explode: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskListResponse'

  /tags/{tag_gid}/tasks:
    get:
      summary: Get tasks from a tag
      operationId: getTasksByTag
      parameters:
        - name: tag_gid
          in: path
          required: true
          schema:
            type: string
        - name: opt_fields
          in: query
          description: |
            Defines which fields to return in the response. Multiple fields can be included as a comma-separated list.
            Common fields include: name, notes, due_on, completed, permalink_url, tags.name, custom_fields.name, custom_fields.display_value, created_at, completed_at
          required: false
          schema:
            type: array
            items:
              type: string
              enum: [
                "name",
                "notes", 
                "due_on",
                "completed",
                "permalink_url",
                "tags.name",
                "custom_fields.name",
                "custom_fields.display_value",
                "created_at",
                "completed_at"
              ]
              default: [
                "name",
                "notes", 
                "due_on",
                "completed",
                "permalink_url",
                "tags.name",
                "custom_fields.name",
                "custom_fields.display_value",
                "created_at",
                "completed_at"
              ]
          style: form
          explode: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskListResponse'

  /tasks/{task_gid}/tags:
    get:
      summary: Get tags from a task
      operationId: getTagsFromTask
      parameters:
        - name: task_gid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagListResponse'

  /tasks/{task_gid}/addTag:
    post:
      summary: Add a tag to a task
      operationId: addTagToTask
      parameters:
        - name: task_gid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagActionRequest'
      responses:
        '200':
          description: Successfully added tag
          content:
            application/json:
              schema:
                type: object
                properties:
                  data: {}

  /tasks/{task_gid}/removeTag:
    post:
      summary: Remove a tag from a task
      operationId: removeTagFromTask
      parameters:
        - name: task_gid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagActionRequest'
      responses:
        '200':
          description: Successfully removed tag
          content:
            application/json:
              schema:
                type: object
                properties:
                  data: {}

components:
  schemas:
    TaskCreateRequest:
      type: object
      required: [data]
      properties:
        data:
          type: object
          required: [name]
          properties:
            name:
              type: string
            notes:
              type: string
            due_on:
              type: string
              format: date
            workspace:
              type: string
              default: "1208951390306863"
            projects:
              type: array
              items:
                type: string
                default: ["1208951390311549"]

    TaskUpdateRequest:
      type: object
      required: [data]
      properties:
        data:
          type: object
          properties:
            name:
              type: string
            notes:
              type: string
            due_on:
              type: string
              format: date
            completed:
              type: boolean

    Task:
      type: object
      required: [gid, name]
      properties:
        gid:
          type: string
        name:
          type: string
        notes:
          type: string
        due_on:
          type: string
          format: date
        completed:
          type: boolean
        permalink_url:
          type: string
        created_at:
          type: string
        completed_at:
          type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        
    
    TaskResponse:
      type: object
      required: [data]
      properties:
        data:
          type: object
          properties:
            gid:
              type: string
            name:
              type: string
            notes:
              type: string
            due_on:
              type: string
              format: date
            completed:
              type: boolean
            permalink_url:
              type: string
            created_at:
              type: string
            completed_at:
              type: string
            tags:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
            custom_fields:
              type: array
              items:
                $ref: '#/components/schemas/CustomField'
            

    TaskListResponse:
      type: object
      required: [data]
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Task'

    TagListResponse:
      type: object
      required: [data]
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Tag'

    Tag:
      type: object
      required: [gid, name]
      properties:
        gid:
          type: string
        name:
          type: string

    TagActionRequest:
      type: object
      required: [data]
      properties:
        data:
          type: object
          required: [tag]
          properties:
            tag:
              type: string
              description: The GID of the tag to add or remove
    
    CustomField:
      type: object
      required: [gid, name]
      properties:
        gid:
          type: string
        name:
          type: string
        display_value:
          type: string
    
    SectionsListResponse:
      type: object
      required: [data]
      properties:
        data:
          type: array
          items:
            type: object
            required: [gid, name]
            properties:
              gid:
                type: string
              name:
                type: string
      
